# https://kubernetes.io/docs/concepts/services-networking/ingress/#the-ingress-resource

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapi
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: letsencrypt-production  # Or letsencrypt-staging for testin

spec:

  ingressClassName: nginx-internal-static
  # The TLS secret name will be used by Ingress Controller to secure the Ingress traffic
  # This secret should be created by Cert-Manager and referenced here
  tls:
  - hosts:
    - internal.privatelink.apimanagement.azure.com
    secretName: webapi-tls  # This is where Cert-Manager will store the TLS certificate

  rules:
  - host: internal.privatelink.apimanagement.azure.com
    
    http:
      paths:

      - path: /app1(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: books-service
            port:
              number: 80

      - path: /app2(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: universities-service
            port:
              number: 80

      - path: /app3(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: news-service
            port:
              number: 80

      - path: /app4(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: movies-service
            port:
              number: 80



#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: webapi
#  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
#    nginx.ingress.kubernetes.io/ssl-redirect: "true"                     # Enforce HTTPS
#    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"               # Force HTTP to HTTPS
#    nginx.ingress.kubernetes.io/proxy-body-size: "10m"                   # Limit request size
#    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"              # Set connection timeout
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"                 # Set read timeout
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"                 # Set send timeout
#    nginx.ingress.kubernetes.io/enable-modsecurity: "true"               # Enable ModSecurity for WAF
#    nginx.ingress.kubernetes.io/enable-owasp-modsecurity-crs: "true"     # Enable OWASP ModSecurity rules
#
#spec:
#  ingressClassName: nginx-internal-static
#  rules:
#  - http:
#      paths:
#      - path: /app1(/|$)(.*)
#        pathType: Prefix
#        backend:
#          service:
#            name: books-service
#            port:
#              number: 80
#
#      - path: /app2(/|$)(.*)
#        pathType: Prefix
#        backend:
#          service:
#            name: universities-service
#            port:
#              number: 80
#
#      - path: /app3(/|$)(.*)
#        pathType: Prefix
#        backend:
#          service:
#            name: news-service
#            port:
#              number: 80
#
#      - path: /app4(/|$)(.*)
#        pathType: Prefix
#        backend:
#          service:
#            name: movies-service
#            port:
#              number: 80
#
#  tls:
#  - hosts:
#    - yourdomain.com  # Replace with your domain
#    secretName: your-tls-secret  # Ensure a valid TLS secret is set up











